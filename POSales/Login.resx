<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAdZJREFUSEvt
        ljtPwlAUgEk0/hjRSVrUMICtGhODiUrCQow4mKAxYqLgII4uEo3yp5h1AgR88fKxwKUw0GPvpRRKbxq4
        xbBwkm+55/H13HS4tkmMNcBnn6muOeZqIidaAc/As9Sx5oEEjqsJfF4BRkQOrfIOdTw9wO2eVgqzfY2W
        qQr8C/h8U6rGGOR6KY2joOrh7KrGGFVx0U1rGgV4tqoxhpkY+b3Ucx3rLvq5ApO4cXUOUP6GZuLekOvQ
        uI6CnM5AfW+Xmh9evOECOZUB+PolNOM3+ryCFDkBKJZJvvX0rGy+bKhh2rge2CHbaPLEnZZrxCLkNkju
        swRS+FDX24FJjKHJG7GLgaQYZjGmXw6Vn4GkGEtiDJHn37ryUgWk4wNqbS+WxdJlmMg0sULzMU6t7cWS
        mEiLban8UQQ599qVP5jLmcVS9LQrfS+Q660HtvU/nImcSWyQHgW1nFF+q+vtMLQYeVe6P1OhDNJZSJfH
        1IN+kLO59odl84C2BEMN28ahfbJV76b94M1byST562l5JjEGbbqp5zrERfq5ArPYKubicT0E8NMHCXyG
        1miRlOnTB0dNXJofpRyJfBrfpDrePMjzVnDOIo9zwQp4xsDP20n8T9hsf8nwdmNaUE2tAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="txtName.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAL1JREFUOE/F
        kwENhDAMRScBCScBByDhnJwETsJJwAlIOAecFP5jWwJkCVt3CT95SdOupS2bu0u96LxZp1Z8xRjAxmfW
        uUD8gEmM+fHmQXRKrFgkvb15ED5zQbo5C595j+xr3w22eYfoIWYxBbDxVasJ/EXsi0sN5t3RzSAWwZh7
        foJYdsfx8nI9Ukn4iFH4smMO0EXOaJdnCdBZyfI5S06yKGM8vVkkclIvanO+RPyjuZCTLBjfrgXT275D
        zq32bSxbmf0rJwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="txtPass.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAQ9JREFUOE9j
        GAVDCLh4hxRAmeQDJ68gec+AyDeu3iH/fYOjf4No78CodyBxqBLSgIdf2O/iirr/yKC+peu/p1/4b6gS
        4oGLV+j6+JSc/3fu3v9/9PgpqHEQEBWf/t/LP/KTf2j8eXTsHRQ1DWoEKvAJinraM2Ha/4CwuP/F5XX/
        127YAjXuP5jtFxr3f8HaHf/nrtyCguPTC38GhCXMhRqDAMgGllTUYzVw39mbr1bvPPIfhHeeuPQBZGBg
        eOIPF58QB6gxCIDq5ZNQoyAA5GVPoJfDE7N9gN7cHxSZvAnE9guLu+AfnpAFNQITgCIF5DpkQHakgAAk
        2US8BSUXv+AYypMNMqBKwh4FgwEwMAAAkKTkcxEfFx4AAAAASUVORK5CYII=
</value>
  </data>
</root>